name: Tests

on:
  pull_request:
    branches:
      - main
    paths:
      - "lc_classification_step/**"
      - "!lc_classification_step/README.md"

jobs:
  lc_classification_step_lint:
    uses: ./.github/workflows/lint-template.yaml
    with:
      base-folder: "lc_classification_step"
      sources-folder: "lc_classification"
  lc_classification_step_unittest:
    uses: ./.github/workflows/poetry-tests-template.yaml
    with:
      base-folder: "lc_classification_step"
      python-version: "3.8"
      poetry-install: "--with ztf --with elasticc --with anomaly --with mbappe"
      test-folder: "tests/unit"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_MLP_MODEL_PATH: "${{ secrets.TEST_MLP_MODEL_PATH }}"
      TEST_ANOMALY_QUANTILES_PATH: "${{ secrets.TEST_ANOMALY_QUANTILES_PATH }}"
      TEST_ANOMALY_MODEL_PATH: "${{ secrets.TEST_ANOMALY_MODEL_PATH }}"
      TEST_MBAPPE_MODEL_PATH: "${{ secrets.TEST_MBAPPE_MODEL_PATH }}"
      TEST_MBAPPE_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MBAPPE_FEATURE_QUANTILES_PATH }}"
      TEST_MBAPPE_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MBAPPE_HEADER_QUANTILES_PATH }}"

  lc_classification_step_integration:
    uses: ./.github/workflows/poetry-tests-template.yaml
    with:
      base-folder: "lc_classification_step"
      python-version: "3.8"
      codecov-flags: "" # Do not upload
      poetry-install: "--with ztf --with elasticc --with anomaly --with mbappe"
      test-folder: "tests/integration"
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}
      TEST_BALTO_MODEL_PATH: "${{ secrets.TEST_BALTO_MODEL_PATH }}"
      TEST_BALTO_QUANTILES_PATH: "${{ secrets.TEST_BALTO_QUANTILES_PATH }}"
      TEST_MESSI_MODEL_PATH: "${{ secrets.TEST_MESSI_MODEL_PATH }}"
      TEST_MESSI_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MESSI_HEADER_QUANTILES_PATH }}"
      TEST_MESSI_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MESSI_FEATURE_QUANTILES_PATH }}"
      TEST_TORETTO_MODEL_PATH: "${{ secrets.TEST_TORETTO_MODEL_PATH }}"
      TEST_MLP_MODEL_PATH: "${{ secrets.TEST_MLP_MODEL_PATH }}"
      TEST_ANOMALY_QUANTILES_PATH: "${{ secrets.TEST_ANOMALY_QUANTILES_PATH }}"
      TEST_ANOMALY_MODEL_PATH: "${{ secrets.TEST_ANOMALY_MODEL_PATH }}"
      TEST_MBAPPE_MODEL_PATH: "${{ secrets.TEST_MBAPPE_MODEL_PATH }}"
      TEST_MBAPPE_FEATURE_QUANTILES_PATH: "${{ secrets.TEST_MBAPPE_FEATURE_QUANTILES_PATH }}"
      TEST_MBAPPE_HEADER_QUANTILES_PATH: "${{ secrets.TEST_MBAPPE_HEADER_QUANTILES_PATH }}"

  build-lc-classification-balto-dagger:
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
      ref: ${{ github.ref }}
      stage: staging
      extra-args: lc_classification_step_balto --build-args=model:balto --package-dir=lc_classification_step --dry-run
      submodules: true
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-mlp-dagger:
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
      ref: ${{ github.ref }}
      stage: staging
      extra-args: lc_classification_step_mlp --build-args=model:mlp --package-dir=lc_classification_step --dry-run
      submodules: true
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-messi-dagger:
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
      ref: ${{ github.ref }}
      stage: staging
      extra-args: lc_classification_step_messi --build-args=model:messi --package-dir=lc_classification_step --dry-run
      submodules: true
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-ztf-dagger:
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
      ref: ${{ github.ref }}
      stage: staging
      extra-args: lc_classification_step_ztf --build-args=model:ztf --package-dir=lc_classification_step --dry-run
      submodules: true
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-anomaly-dagger:
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
      ref: ${{ github.ref }}
      stage: staging
      extra-args: lc_classification_step_anomaly --build-args=model:anomaly --package-dir=lc_classification_step --dry-run
      submodules: true
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

  build-lc-classification-mbappe-dagger:
    uses: ./.github/workflows/template_build_with_dagger.yaml
    with:
      ref: ${{ github.ref }}
      stage: staging
      extra-args: lc_classification_step_mbappe --build-args=model:mbappe --package-dir=lc_classification_step --dry-run
      submodules: true
    secrets:
      GH_TOKEN: ${{ secrets.ADMIN_TOKEN }}

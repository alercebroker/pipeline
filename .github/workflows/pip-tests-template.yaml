name: Test with pip
on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '3.10'
      sources-folder:
        required: false
        type: string
        default: 'src'
      test-folder:
        required: false
        type: string
        default: 'tests'
      pre-dependencies:
        required: false
        type: string
      requirements-file:
        required: false
        type: string
        default: 'requirements.txt'
      test-dependencies:
        required: false
        type: string
        default: 'pytest pytest-cov'
      codecov-flags:
        required: false
        type: string
        default: 'unittest'
      base-folder:
        required: false
        type: string
        default: '.'
      test-command:
        required: false
        type: string
        default: 'pytest -x ${{ inputs.test-folder }} --cov ${{ inputs.sources-folder }} --cov-report xml'
      apt-get_install:
        required: false
        type: string
        default: ''
    secrets:
      GH_TOKEN:
        required: false
        description: 'A github PAT that enables installation of package from private repo'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: "${{ secrets.GH_TOKEN }}"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          token: ${{secrets.GH_TOKEN}}
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}
          cache: 'pip'
      - name: Install pre dependencies
        if: ${{ inputs.pre-dependencies != '' }}
        run: |
          cd ${{ inputs.base-folder }}
          pip install --upgrade pip
          pip install ${{ inputs.pre-dependencies }}
      - name: Install dependencies
        run: |
          cd ${{ inputs.base-folder }}
          pip install --upgrade pip
          pip install -r ${{ inputs.requirements-file }}
      - name: Install test dependencies
        run: |
          cd ${{ inputs.base-folder }}
          ${{ inputs.apt-get_install }}
          pip install --upgrade pip
          pip install ${{ inputs.test-dependencies }}
      - name: Tests
        run: |
          cd ${{ inputs.base-folder }}
          ${{ inputs.test-command }}
      - name: Upload test coverage to Codecov
        if: ${{ inputs.codecov-flags != '' }}
        uses: codecov/codecov-action@v3
        with:
          files: ${{ inputs.base-folder }}/coverage.xml
          flags: ${{ inputs.codecov-flags }}

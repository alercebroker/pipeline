import pandas as pd

dia_forced_source_schema = {
    "diaForcedSourceId": pd.Int64Dtype(),
    "diaObjectId": pd.Int64Dtype(),
    "ra": pd.Float64Dtype(),
    "dec": pd.Float64Dtype(),
    "visit": pd.Int64Dtype(),
    "detector": pd.Int32Dtype(),
    "psfFlux": pd.Float32Dtype(),
    "psfFluxErr": pd.Float32Dtype(),
    "midpointMjdTai": pd.Float64Dtype(),
    "band": pd.StringDtype(),
}

dia_non_detection_limit_schema = {
    "ccdVisitId": pd.Int64Dtype(),
    "midpointMjdTai": pd.Float64Dtype(),
    "band": pd.StringDtype(),
    "diaNoise": pd.Float32Dtype(),
}

dia_source_schema = {
    "diaSourceId": pd.Int64Dtype(),
    "visit": pd.Int64Dtype(),
    "detector": pd.Int32Dtype(),
    "diaObjectId": pd.Int64Dtype(),
    "ssObjectId": pd.Int64Dtype(),
    "parentDiaSourceId": pd.Int64Dtype(),
    "midpointMjdTai": pd.Float64Dtype(),
    "ra": pd.Float64Dtype(),
    "raErr": pd.Float32Dtype(),
    "dec": pd.Float64Dtype(),
    "decErr": pd.Float32Dtype(),
    "ra_dec_Cov": pd.Float32Dtype(),
    "x": pd.Float32Dtype(),
    "xErr": pd.Float32Dtype(),
    "y": pd.Float32Dtype(),
    "yErr": pd.Float32Dtype(),
    "x_y_Cov": pd.Float32Dtype(),
    "centroid_flag": pd.BooleanDtype(),
    "apFlux": pd.Float32Dtype(),
    "apFluxErr": pd.Float32Dtype(),
    "apFlux_flag": pd.BooleanDtype(),
    "apFlux_flag_apertureTruncated": pd.BooleanDtype(),
    "is_negative": pd.BooleanDtype(),
    "snr": pd.Float32Dtype(),
    "psfFlux": pd.Float32Dtype(),
    "psfFluxErr": pd.Float32Dtype(),
    "psfRa": pd.Float64Dtype(),
    "psfRaErr": pd.Float32Dtype(),
    "psfDec": pd.Float64Dtype(),
    "psfDecErr": pd.Float32Dtype(),
    "psfFlux_psfRa_Cov": pd.Float32Dtype(),
    "psfFlux_psfDec_Cov": pd.Float32Dtype(),
    "psfRa_psfDec_Cov": pd.Float32Dtype(),
    "psfLnL": pd.Float32Dtype(),
    "psfChi2": pd.Float32Dtype(),
    "psfNdata": pd.Int32Dtype(),
    "psfFlux_flag": pd.BooleanDtype(),
    "psfFlux_flag_edge": pd.BooleanDtype(),
    "psfFlux_flag_noGoodPixels": pd.BooleanDtype(),
    "trailFlux": pd.Float32Dtype(),
    "trailFluxErr": pd.Float32Dtype(),
    "trailRa": pd.Float64Dtype(),
    "trailRaErr": pd.Float32Dtype(),
    "trailDec": pd.Float64Dtype(),
    "trailDecErr": pd.Float32Dtype(),
    "trailLength": pd.Float32Dtype(),
    "trailLengthErr": pd.Float32Dtype(),
    "trailAngle": pd.Float32Dtype(),
    "trailAngleErr": pd.Float32Dtype(),
    "trailFlux_trailRa_Cov": pd.Float32Dtype(),
    "trailFlux_trailDec_Cov": pd.Float32Dtype(),
    "trailFlux_trailLength_Cov": pd.Float32Dtype(),
    "trailFlux_trailAngle_Cov": pd.Float32Dtype(),
    "trailRa_trailDec_Cov": pd.Float32Dtype(),
    "trailRa_trailLength_Cov": pd.Float32Dtype(),
    "trailRa_trailAngle_Cov": pd.Float32Dtype(),
    "trailDec_trailLength_Cov": pd.Float32Dtype(),
    "trailDec_trailAngle_Cov": pd.Float32Dtype(),
    "trailLength_trailAngle_Cov": pd.Float32Dtype(),
    "trailLnL": pd.Float32Dtype(),
    "trailChi2": pd.Float32Dtype(),
    "trailNdata": pd.Int32Dtype(),
    "trail_flag_edge": pd.BooleanDtype(),
    "dipoleMeanFlux": pd.Float32Dtype(),
    "dipoleMeanFluxErr": pd.Float32Dtype(),
    "dipoleFluxDiff": pd.Float32Dtype(),
    "dipoleFluxDiffErr": pd.Float32Dtype(),
    "dipoleRa": pd.Float64Dtype(),
    "dipoleRaErr": pd.Float32Dtype(),
    "dipoleDec": pd.Float64Dtype(),
    "dipoleDecErr": pd.Float32Dtype(),
    "dipoleLength": pd.Float32Dtype(),
    "dipoleLengthErr": pd.Float32Dtype(),
    "dipoleAngle": pd.Float32Dtype(),
    "dipoleAngleErr": pd.Float32Dtype(),
    "dipoleMeanFlux_dipoleFluxDiff_Cov": pd.Float32Dtype(),
    "dipoleMeanFlux_dipoleRa_Cov": pd.Float32Dtype(),
    "dipoleMeanFlux_dipoleDec_Cov": pd.Float32Dtype(),
    "dipoleMeanFlux_dipoleLength_Cov": pd.Float32Dtype(),
    "dipoleMeanFlux_dipoleAngle_Cov": pd.Float32Dtype(),
    "dipoleFluxDiff_dipoleRa_Cov": pd.Float32Dtype(),
    "dipoleFluxDiff_dipoleDec_Cov": pd.Float32Dtype(),
    "dipoleFluxDiff_dipoleLength_Cov": pd.Float32Dtype(),
    "dipoleFluxDiff_dipoleAngle_Cov": pd.Float32Dtype(),
    "dipoleRa_dipoleDec_Cov": pd.Float32Dtype(),
    "dipoleRa_dipoleLength_Cov": pd.Float32Dtype(),
    "dipoleRa_dipoleAngle_Cov": pd.Float32Dtype(),
    "dipoleDec_dipoleLength_Cov": pd.Float32Dtype(),
    "dipoleDec_dipoleAngle_Cov": pd.Float32Dtype(),
    "dipoleLength_dipoleAngle_Cov": pd.Float32Dtype(),
    "dipoleLnL": pd.Float32Dtype(),
    "dipoleChi2": pd.Float32Dtype(),
    "dipoleNdata": pd.Int32Dtype(),
    "forced_PsfFlux_flag": pd.BooleanDtype(),
    "forced_PsfFlux_flag_edge": pd.BooleanDtype(),
    "forced_PsfFlux_flag_noGoodPixels": pd.BooleanDtype(),
    "snapDiffFlux": pd.Float32Dtype(),
    "snapDiffFluxErr": pd.Float32Dtype(),
    "fpBkgd": pd.Float32Dtype(),
    "fpBkgdErr": pd.Float32Dtype(),
    "ixx": pd.Float32Dtype(),
    "ixxErr": pd.Float32Dtype(),
    "iyy": pd.Float32Dtype(),
    "iyyErr": pd.Float32Dtype(),
    "ixy": pd.Float32Dtype(),
    "ixyErr": pd.Float32Dtype(),
    "ixx_iyy_Cov": pd.Float32Dtype(),
    "ixx_ixy_Cov": pd.Float32Dtype(),
    "iyy_ixy_Cov": pd.Float32Dtype(),
    "ixxPSF": pd.Float32Dtype(),
    "iyyPSF": pd.Float32Dtype(),
    "ixyPSF": pd.Float32Dtype(),
    "shape_flag": pd.BooleanDtype(),
    "shape_flag_no_pixels": pd.BooleanDtype(),
    "shape_flag_not_contained": pd.BooleanDtype(),
    "shape_flag_parent_source": pd.BooleanDtype(),
    "extendedness": pd.Float32Dtype(),
    "reliability": pd.Float32Dtype(),
    "band": pd.StringDtype(),
    "dipoleFitAttempted": pd.BooleanDtype(),
    "pixelFlags": pd.BooleanDtype(),
    "pixelFlags_bad": pd.BooleanDtype(),
    "pixelFlags_cr": pd.BooleanDtype(),
    "pixelFlags_crCenter": pd.BooleanDtype(),
    "pixelFlags_edge": pd.BooleanDtype(),
    "pixelFlags_nodata": pd.BooleanDtype(),
    "pixelFlags_nodataCenter": pd.BooleanDtype(),
    "pixelFlags_interpolated": pd.BooleanDtype(),
    "pixelFlags_interpolatedCenter": pd.BooleanDtype(),
    "pixelFlags_offimage": pd.BooleanDtype(),
    "pixelFlags_saturated": pd.BooleanDtype(),
    "pixelFlags_saturatedCenter": pd.BooleanDtype(),
    "pixelFlags_suspect": pd.BooleanDtype(),
    "pixelFlags_suspectCenter": pd.BooleanDtype(),
    "pixelFlags_streak": pd.BooleanDtype(),
    "pixelFlags_streakCenter": pd.BooleanDtype(),
    "pixelFlags_injected": pd.BooleanDtype(),
    "pixelFlags_injectedCenter": pd.BooleanDtype(),
    "pixelFlags_injected_template": pd.BooleanDtype(),
    "pixelFlags_injected_templateCenter": pd.BooleanDtype(),
}

dia_object_schema = {
    "diaObjectId": pd.Int64Dtype(),
    "ra": pd.Float64Dtype(),
    "raErr": pd.Float32Dtype(),
    "dec": pd.Float64Dtype(),
    "decErr": pd.Float32Dtype(),
    "ra_dec_Cov": pd.Float32Dtype(),
    "radecMjdTai": pd.Float64Dtype(),
    "pmRa": pd.Float32Dtype(),
    "pmRaErr": pd.Float32Dtype(),
    "pmDec": pd.Float32Dtype(),
    "pmDecErr": pd.Float32Dtype(),
    "parallax": pd.Float32Dtype(),
    "parallaxErr": pd.Float32Dtype(),
    "pmRa_pmDec_Cov": pd.Float32Dtype(),
    "pmRa_parallax_Cov": pd.Float32Dtype(),
    "pmDec_parallax_Cov": pd.Float32Dtype(),
    "pmParallaxLnL": pd.Float32Dtype(),
    "pmParallaxChi2": pd.Float32Dtype(),
    "pmParallaxNdata": pd.Int32Dtype(),
    "u_psfFluxMean": pd.Float32Dtype(),
    "u_psfFluxMeanErr": pd.Float32Dtype(),
    "u_psfFluxSigma": pd.Float32Dtype(),
    "u_psfFluxChi2": pd.Float32Dtype(),
    "u_psfFluxNdata": pd.Int32Dtype(),
    "u_fpFluxMean": pd.Float32Dtype(),
    "u_fpFluxMeanErr": pd.Float32Dtype(),
    "u_fpFluxSigma": pd.Float32Dtype(),
    "g_psfFluxMean": pd.Float32Dtype(),
    "g_psfFluxMeanErr": pd.Float32Dtype(),
    "g_psfFluxSigma": pd.Float32Dtype(),
    "g_psfFluxChi2": pd.Float32Dtype(),
    "g_psfFluxNdata": pd.Int32Dtype(),
    "g_fpFluxMean": pd.Float32Dtype(),
    "g_fpFluxMeanErr": pd.Float32Dtype(),
    "g_fpFluxSigma": pd.Float32Dtype(),
    "r_psfFluxMean": pd.Float32Dtype(),
    "r_psfFluxMeanErr": pd.Float32Dtype(),
    "r_psfFluxSigma": pd.Float32Dtype(),
    "r_psfFluxChi2": pd.Float32Dtype(),
    "r_psfFluxNdata": pd.Int32Dtype(),
    "r_fpFluxMean": pd.Float32Dtype(),
    "r_fpFluxMeanErr": pd.Float32Dtype(),
    "r_fpFluxSigma": pd.Float32Dtype(),
    "i_psfFluxMean": pd.Float32Dtype(),
    "i_psfFluxMeanErr": pd.Float32Dtype(),
    "i_psfFluxSigma": pd.Float32Dtype(),
    "i_psfFluxChi2": pd.Float32Dtype(),
    "i_psfFluxNdata": pd.Int32Dtype(),
    "i_fpFluxMean": pd.Float32Dtype(),
    "i_fpFluxMeanErr": pd.Float32Dtype(),
    "i_fpFluxSigma": pd.Float32Dtype(),
    "z_psfFluxMean": pd.Float32Dtype(),
    "z_psfFluxMeanErr": pd.Float32Dtype(),
    "z_psfFluxSigma": pd.Float32Dtype(),
    "z_psfFluxChi2": pd.Float32Dtype(),
    "z_psfFluxNdata": pd.Int32Dtype(),
    "z_fpFluxMean": pd.Float32Dtype(),
    "z_fpFluxMeanErr": pd.Float32Dtype(),
    "z_fpFluxSigma": pd.Float32Dtype(),
    "y_psfFluxMean": pd.Float32Dtype(),
    "y_psfFluxMeanErr": pd.Float32Dtype(),
    "y_psfFluxSigma": pd.Float32Dtype(),
    "y_psfFluxChi2": pd.Float32Dtype(),
    "y_psfFluxNdata": pd.Int32Dtype(),
    "y_fpFluxMean": pd.Float32Dtype(),
    "y_fpFluxMeanErr": pd.Float32Dtype(),
    "y_fpFluxSigma": pd.Float32Dtype(),
    "nearbyObj1": pd.Int64Dtype(),
    "nearbyObj1Dist": pd.Float32Dtype(),
    "nearbyObj1LnP": pd.Float32Dtype(),
    "nearbyObj2": pd.Int64Dtype(),
    "nearbyObj2Dist": pd.Float32Dtype(),
    "nearbyObj2LnP": pd.Float32Dtype(),
    "nearbyObj3": pd.Int64Dtype(),
    "nearbyObj3Dist": pd.Float32Dtype(),
    "nearbyObj3LnP": pd.Float32Dtype(),
    "u_psfFluxErrMean": pd.Float32Dtype(),
    "g_psfFluxErrMean": pd.Float32Dtype(),
    "r_psfFluxErrMean": pd.Float32Dtype(),
    "i_psfFluxErrMean": pd.Float32Dtype(),
    "z_psfFluxErrMean": pd.Float32Dtype(),
    "y_psfFluxErrMean": pd.Float32Dtype(),
}

ss_object_schema = {
    "ssObjectId": pd.Int64Dtype(),
    "discoverySubmissionDate": pd.Float64Dtype(),
    "firstObservationDate": pd.Float64Dtype(),
    "arc": pd.Float32Dtype(),
    "numObs": pd.Int32Dtype(),
    "MOID": pd.Float32Dtype(),
    "MOIDTrueAnomaly": pd.Float32Dtype(),
    "MOIDEclipticLongitude": pd.Float32Dtype(),
    "MOIDDeltaV": pd.Float32Dtype(),
    "u_H": pd.Float32Dtype(),
    "u_G12": pd.Float32Dtype(),
    "u_HErr": pd.Float32Dtype(),
    "u_G12Err": pd.Float32Dtype(),
    "u_H_u_G12_Cov": pd.Float32Dtype(),
    "u_Chi2": pd.Float32Dtype(),
    "u_Ndata": pd.Int32Dtype(),
    "g_H": pd.Float32Dtype(),
    "g_G12": pd.Float32Dtype(),
    "g_HErr": pd.Float32Dtype(),
    "g_G12Err": pd.Float32Dtype(),
    "g_H_g_G12_Cov": pd.Float32Dtype(),
    "g_Chi2": pd.Float32Dtype(),
    "g_Ndata": pd.Int32Dtype(),
    "r_H": pd.Float32Dtype(),
    "r_G12": pd.Float32Dtype(),
    "r_HErr": pd.Float32Dtype(),
    "r_G12Err": pd.Float32Dtype(),
    "r_H_r_G12_Cov": pd.Float32Dtype(),
    "r_Chi2": pd.Float32Dtype(),
    "r_Ndata": pd.Int32Dtype(),
    "i_H": pd.Float32Dtype(),
    "i_G12": pd.Float32Dtype(),
    "i_HErr": pd.Float32Dtype(),
    "i_G12Err": pd.Float32Dtype(),
    "i_H_i_G12_Cov": pd.Float32Dtype(),
    "i_Chi2": pd.Float32Dtype(),
    "i_Ndata": pd.Int32Dtype(),
    "z_H": pd.Float32Dtype(),
    "z_G12": pd.Float32Dtype(),
    "z_HErr": pd.Float32Dtype(),
    "z_G12Err": pd.Float32Dtype(),
    "z_H_z_G12_Cov": pd.Float32Dtype(),
    "z_Chi2": pd.Float32Dtype(),
    "z_Ndata": pd.Int32Dtype(),
    "y_H": pd.Float32Dtype(),
    "y_G12": pd.Float32Dtype(),
    "y_HErr": pd.Float32Dtype(),
    "y_G12Err": pd.Float32Dtype(),
    "y_H_y_G12_Cov": pd.Float32Dtype(),
    "y_Chi2": pd.Float32Dtype(),
    "y_Ndata": pd.Int32Dtype(),
    "medianExtendedness": pd.Float32Dtype(),
}

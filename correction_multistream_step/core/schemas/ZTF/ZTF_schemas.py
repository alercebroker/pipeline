import pandas as pd


DType = (
    pd.Int32Dtype
    | pd.Int64Dtype
    | pd.Float32Dtype
    | pd.Float64Dtype
    | pd.BooleanDtype
    | pd.StringDtype
)

candidate_schema: dict[str, DType] = {
    "oid": pd.Int64Dtype(),
    "sid": pd.Int32Dtype(),
    "tid": pd.Int32Dtype(),
    "pid": pd.Int64Dtype(),
    "band": pd.Int32Dtype(),
    "measurement_id": pd.Int64Dtype(),
    "mjd": pd.Float64Dtype(),
    "ra": pd.Float64Dtype(),
    "e_ra": pd.Float32Dtype(),
    "dec": pd.Float64Dtype(),
    "e_dec": pd.Float32Dtype(),
    "mag": pd.Float32Dtype(),
    "e_mag": pd.Float32Dtype(),
    "isdiffpos": pd.Int32Dtype(),
    "has_stamp": pd.BooleanDtype(),
    "forced": pd.BooleanDtype(),
    "parent_candid": pd.Int64Dtype(),
    "diffmaglim": pd.Float32Dtype(),
    "pdiffimfilename": pd.StringDtype(),
    "programpi": pd.StringDtype(),
    "programid": pd.Int32Dtype(),
    "tblid": pd.Int64Dtype(),
    "nid": pd.Int32Dtype(),
    "rcid": pd.Int32Dtype(),
    "field": pd.Int32Dtype(),
    "xpos": pd.Float32Dtype(),
    "ypos": pd.Float32Dtype(),
    "chipsf": pd.Float32Dtype(),
    "magap": pd.Float32Dtype(),
    "sigmagap": pd.Float32Dtype(),
    "distnr": pd.Float32Dtype(),
    "magnr": pd.Float32Dtype(),
    "sigmagnr": pd.Float32Dtype(),
    "chinr": pd.Float32Dtype(),
    "sharpnr": pd.Float32Dtype(),
    "sky": pd.Float32Dtype(),
    "magdiff": pd.Float32Dtype(),
    "fwhm": pd.Float32Dtype(),
    "classtar": pd.Float32Dtype(),
    "mindtoedge": pd.Float32Dtype(),
    "magfromlim": pd.Float32Dtype(),
    "seeratio": pd.Float32Dtype(),
    "aimage": pd.Float32Dtype(),
    "bimage": pd.Float32Dtype(),
    "aimagerat": pd.Float32Dtype(),
    "bimagerat": pd.Float32Dtype(),
    "elong": pd.Float32Dtype(),
    "nneg": pd.Int32Dtype(),
    "nbad": pd.Int32Dtype(),
    "rb": pd.Float32Dtype(),
    "ssdistnr": pd.Float32Dtype(),
    "ssmagnr": pd.Float32Dtype(),
    "ssnamenr": pd.StringDtype(),
    "sumrat": pd.Float32Dtype(),
    "magapbig": pd.Float32Dtype(),
    "sigmagapbig": pd.Float32Dtype(),
    "ranr": pd.Float64Dtype(),
    "decnr": pd.Float64Dtype(),
    "sgmag1": pd.Float32Dtype(),
    "srmag1": pd.Float32Dtype(),
    "simag1": pd.Float32Dtype(),
    "szmag1": pd.Float32Dtype(),
    "sgscore1": pd.Float32Dtype(),
    "distpsnr1": pd.Float32Dtype(),
    "ndethist": pd.Int32Dtype(),
    "ncovhist": pd.Int32Dtype(),
    "jdstarthist": pd.Float64Dtype(),
    "jdendhist": pd.Float64Dtype(),
    "scorr": pd.Float64Dtype(),
    "tooflag": pd.Int32Dtype(),
    "objectidps1": pd.Int64Dtype(),
    "objectidps2": pd.Int64Dtype(),
    "sgmag2": pd.Float32Dtype(),
    "srmag2": pd.Float32Dtype(),
    "simag2": pd.Float32Dtype(),
    "szmag2": pd.Float32Dtype(),
    "sgscore2": pd.Float32Dtype(),
    "distpsnr2": pd.Float32Dtype(),
    "objectidps3": pd.Int64Dtype(),
    "sgmag3": pd.Float32Dtype(),
    "srmag3": pd.Float32Dtype(),
    "simag3": pd.Float32Dtype(),
    "szmag3": pd.Float32Dtype(),
    "sgscore3": pd.Float32Dtype(),
    "distpsnr3": pd.Float32Dtype(),
    "nmtchps": pd.Int32Dtype(),
    "rfid": pd.Int64Dtype(),
    "jdstartref": pd.Float64Dtype(),
    "jdendref": pd.Float64Dtype(),
    "nframesref": pd.Int32Dtype(),
    "rbversion": pd.StringDtype(),
    "dsnrms": pd.Float32Dtype(),
    "ssnrms": pd.Float32Dtype(),
    "dsdiff": pd.Float32Dtype(),
    "magzpsci": pd.Float32Dtype(),
    "magzpsciunc": pd.Float32Dtype(),
    "magzpscirms": pd.Float32Dtype(),
    "nmatches": pd.Int32Dtype(),
    "clrcoeff": pd.Float32Dtype(),
    "clrcounc": pd.Float32Dtype(),
    "zpclrcov": pd.Float32Dtype(),
    "zpmed": pd.Float32Dtype(),
    "clrmed": pd.Float32Dtype(),
    "clrrms": pd.Float32Dtype(),
    "neargaia": pd.Float32Dtype(),
    "neargaiabright": pd.Float32Dtype(),
    "maggaia": pd.Float32Dtype(),
    "maggaiabright": pd.Float32Dtype(),
    "exptime": pd.Float32Dtype(),
    "drb": pd.Float32Dtype(),
    "drbversion": pd.StringDtype(),
}

prv_candidate_schema: dict[str, DType] = {
    "oid": pd.Int64Dtype(),
    "sid": pd.Int32Dtype(),
    "tid": pd.Int32Dtype(),
    "pid": pd.Int64Dtype(),
    "band": pd.Int32Dtype(),
    "measurement_id": pd.Int64Dtype(),
    "mjd": pd.Float64Dtype(),
    "ra": pd.Float64Dtype(),
    "e_ra": pd.Float32Dtype(),
    "dec": pd.Float64Dtype(),
    "e_dec": pd.Float32Dtype(),
    "mag": pd.Float32Dtype(),
    "e_mag": pd.Float32Dtype(),
    "isdiffpos": pd.Int32Dtype(),
    "has_stamp": pd.BooleanDtype(),
    "forced": pd.BooleanDtype(),
    "parent_candid": pd.Int64Dtype(),
    "diffmaglim": pd.Float32Dtype(),
    "pdiffimfilename": pd.StringDtype(),
    "programpi": pd.StringDtype(),
    "programid": pd.Int32Dtype(),
    "tblid": pd.Int64Dtype(),
    "nid": pd.Int32Dtype(),
    "rcid": pd.Int32Dtype(),
    "field": pd.Int32Dtype(),
    "xpos": pd.Float32Dtype(),
    "ypos": pd.Float32Dtype(),
    "chipsf": pd.Float32Dtype(),
    "magap": pd.Float32Dtype(),
    "sigmagap": pd.Float32Dtype(),
    "distnr": pd.Float32Dtype(),
    "magnr": pd.Float32Dtype(),
    "sigmagnr": pd.Float32Dtype(),
    "chinr": pd.Float32Dtype(),
    "sharpnr": pd.Float32Dtype(),
    "sky": pd.Float32Dtype(),
    "magdiff": pd.Float32Dtype(),
    "fwhm": pd.Float32Dtype(),
    "classtar": pd.Float32Dtype(),
    "mindtoedge": pd.Float32Dtype(),
    "magfromlim": pd.Float32Dtype(),
    "seeratio": pd.Float32Dtype(),
    "aimage": pd.Float32Dtype(),
    "bimage": pd.Float32Dtype(),
    "aimagerat": pd.Float32Dtype(),
    "bimagerat": pd.Float32Dtype(),
    "elong": pd.Float32Dtype(),
    "nneg": pd.Int32Dtype(),
    "nbad": pd.Int32Dtype(),
    "rb": pd.Float32Dtype(),
    "ssdistnr": pd.Float32Dtype(),
    "ssmagnr": pd.Float32Dtype(),
    "ssnamenr": pd.StringDtype(),
    "sumrat": pd.Float32Dtype(),
    "magapbig": pd.Float32Dtype(),
    "sigmagapbig": pd.Float32Dtype(),
    "ranr": pd.Float64Dtype(),
    "decnr": pd.Float64Dtype(),
    "scorr": pd.Float64Dtype(),
    "magzpsci": pd.Float32Dtype(),
    "magzpsciunc": pd.Float32Dtype(),
    "magzpscirms": pd.Float32Dtype(),
    "clrcoeff": pd.Float32Dtype(),
    "clrcounc": pd.Float32Dtype(),
    "rbversion": pd.StringDtype(),
}

forced_photometry_schema: dict[str, DType] = {
    "oid": pd.Int64Dtype(),
    "sid": pd.Int32Dtype(),
    "tid": pd.Int32Dtype(),
    "pid": pd.Int64Dtype(),
    "band": pd.Int32Dtype(),
    "measurement_id": pd.Int64Dtype(),
    "mjd": pd.Float64Dtype(),
    "ra": pd.Float64Dtype(),
    "e_ra": pd.Float32Dtype(),
    "dec": pd.Float64Dtype(),
    "e_dec": pd.Float32Dtype(),
    "mag": pd.Float32Dtype(),
    "e_mag": pd.Float32Dtype(),
    "isdiffpos": pd.Int32Dtype(),
    "has_stamp": pd.BooleanDtype(),
    "forced": pd.BooleanDtype(),
    "parent_candid": pd.Int64Dtype(),
    "field": pd.Int32Dtype(),
    "rcid": pd.Int32Dtype(),
    "rfid": pd.Int64Dtype(),
    "sciinpseeing": pd.Float32Dtype(),
    "scibckgnd": pd.Float32Dtype(),
    "scisigpix": pd.Float32Dtype(),
    "magzpsci": pd.Float32Dtype(),
    "magzpsciunc": pd.Float32Dtype(),
    "magzpscirms": pd.Float32Dtype(),
    "clrcoeff": pd.Float32Dtype(),
    "clrcounc": pd.Float32Dtype(),
    "exptime": pd.Float32Dtype(),
    "adpctdif1": pd.Float32Dtype(),
    "adpctdif2": pd.Float32Dtype(),
    "diffmaglim": pd.Float32Dtype(),
    "programid": pd.Int32Dtype(),
    "forcediffimflux": pd.Float32Dtype(),
    "forcediffimfluxunc": pd.Float32Dtype(),
    "procstatus": pd.StringDtype(),
    "distnr": pd.Float32Dtype(),
    "ranr": pd.Float64Dtype(),
    "decnr": pd.Float64Dtype(),
    "magnr": pd.Float32Dtype(),
    "sigmagnr": pd.Float32Dtype(),
    "chinr": pd.Float32Dtype(),
    "sharpnr": pd.Float32Dtype(),
}

non_detection_schema: dict[str, DType] = {
    "oid": pd.Int64Dtype(),
    "sid": pd.Int32Dtype(),
    "band": pd.Int32Dtype(),
    "mjd": pd.Float64Dtype(),
    "diffmaglim": pd.Float32Dtype(),
}
